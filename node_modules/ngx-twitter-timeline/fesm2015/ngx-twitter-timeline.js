import { Observable } from 'rxjs';
import { Injectable, Component, ElementRef, Input, NgModule, defineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxTwitterTimelineService {
    constructor() {
        this.TWITTER_SCRIPT_ID = 'twitter-wjs';
        this.TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';
    }
    /**
     * @return {?}
     */
    loadScript() {
        return Observable.create((/**
         * @param {?} observer
         * @return {?}
         */
        observer => {
            this.startScriptLoad();
            window['twttr'].ready((/**
             * @param {?} twttr
             * @return {?}
             */
            (twttr) => {
                observer.next(twttr);
                observer.complete();
            }));
        }));
    }
    /**
     * @private
     * @return {?}
     */
    startScriptLoad() {
        window['twttr'] = ((/**
         * @param {?} d
         * @param {?} s
         * @param {?} id
         * @param {?} url
         * @return {?}
         */
        function (d, s, id, url) {
            /** @type {?} */
            let script;
            /** @type {?} */
            let firstScriptEl = d.getElementsByTagName(s)[0];
            /** @type {?} */
            let twitterScript = window['twttr'] || {};
            if (d.getElementById(id)) {
                return twitterScript;
            }
            script = d.createElement(s);
            script.id = id;
            script.src = url;
            firstScriptEl.parentNode.insertBefore(script, firstScriptEl);
            twitterScript._e = [];
            twitterScript.ready = (/**
             * @param {?} f
             * @return {?}
             */
            function (f) {
                twitterScript._e.push(f);
            });
            return twitterScript;
        })(document, 'script', this.TWITTER_SCRIPT_ID, this.TWITTER_WIDGET_URL));
    }
}
NgxTwitterTimelineService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
NgxTwitterTimelineService.ctorParameters = () => [];
/** @nocollapse */ NgxTwitterTimelineService.ngInjectableDef = defineInjectable({ factory: function NgxTwitterTimelineService_Factory() { return new NgxTwitterTimelineService(); }, token: NgxTwitterTimelineService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxTwitterTimelineComponent {
    /**
     * @param {?} element
     * @param {?} twitterTimelineService
     */
    constructor(element, twitterTimelineService) {
        this.element = element;
        this.twitterTimelineService = twitterTimelineService;
        this.defaultOpts = {
            tweetLimit: 5
        };
        this.defaultData = {
            sourceType: 'url',
            url: 'https://twitter.com/twitterdev',
            screenName: 'twitterdev'
        };
    }
    ;
    /**
     * @return {?}
     */
    ngOnChanges() {
        if (this.data && this.data.sourceType) {
            switch (this.data.sourceType) {
                case 'url':
                    delete this.defaultData.screenName;
                    break;
                case 'profile':
                    delete this.defaultData.url;
                    break;
                default:
                    break;
            }
            this.loadTwitterWidget();
        }
    }
    /**
     * @return {?}
     */
    loadTwitterWidget() {
        this.twitterTimelineService
            .loadScript()
            .subscribe((/**
         * @param {?} twttr
         * @return {?}
         */
        twttr => {
            /** @type {?} */
            let nativeElement = this.element.nativeElement;
            nativeElement.innerHTML = "";
            window['twttr']
                .widgets
                .createTimeline(Object.assign({}, this.defaultData, this.data), nativeElement, Object.assign({}, this.defaultOpts, this.opts))
                .then((/**
             * @param {?} embed
             * @return {?}
             */
            embed => {
                // console.log(embed);
            }))
                .catch((/**
             * @param {?} error
             * @return {?}
             */
            error => console.error(error)));
        }), (/**
         * @param {?} err
         * @return {?}
         */
        err => console.error(err)));
    }
}
NgxTwitterTimelineComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-twitter-timeline',
                template: ``
            }] }
];
/** @nocollapse */
NgxTwitterTimelineComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: NgxTwitterTimelineService }
];
NgxTwitterTimelineComponent.propDecorators = {
    data: [{ type: Input }],
    opts: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxTwitterTimelineModule {
}
NgxTwitterTimelineModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgxTwitterTimelineComponent],
                imports: [],
                exports: [NgxTwitterTimelineComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxTwitterTimelineService, NgxTwitterTimelineComponent, NgxTwitterTimelineModule };

//# sourceMappingURL=ngx-twitter-timeline.js.map