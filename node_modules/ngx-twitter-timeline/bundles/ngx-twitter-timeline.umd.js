(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-twitter-timeline', ['exports', 'rxjs', '@angular/core'], factory) :
    (factory((global['ngx-twitter-timeline'] = {}),global.rxjs,global.ng.core));
}(this, (function (exports,rxjs,i0) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxTwitterTimelineService = /** @class */ (function () {
        function NgxTwitterTimelineService() {
            this.TWITTER_SCRIPT_ID = 'twitter-wjs';
            this.TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';
        }
        /**
         * @return {?}
         */
        NgxTwitterTimelineService.prototype.loadScript = /**
         * @return {?}
         */
            function () {
                var _this = this;
                return rxjs.Observable.create(( /**
                 * @param {?} observer
                 * @return {?}
                 */function (observer) {
                    _this.startScriptLoad();
                    window['twttr'].ready(( /**
                     * @param {?} twttr
                     * @return {?}
                     */function (twttr) {
                        observer.next(twttr);
                        observer.complete();
                    }));
                }));
            };
        /**
         * @private
         * @return {?}
         */
        NgxTwitterTimelineService.prototype.startScriptLoad = /**
         * @private
         * @return {?}
         */
            function () {
                window['twttr'] = (( /**
                 * @param {?} d
                 * @param {?} s
                 * @param {?} id
                 * @param {?} url
                 * @return {?}
                 */function (d, s, id, url) {
                    /** @type {?} */
                    var script;
                    /** @type {?} */
                    var firstScriptEl = d.getElementsByTagName(s)[0];
                    /** @type {?} */
                    var twitterScript = window['twttr'] || {};
                    if (d.getElementById(id)) {
                        return twitterScript;
                    }
                    script = d.createElement(s);
                    script.id = id;
                    script.src = url;
                    firstScriptEl.parentNode.insertBefore(script, firstScriptEl);
                    twitterScript._e = [];
                    twitterScript.ready = ( /**
                     * @param {?} f
                     * @return {?}
                     */function (f) {
                        twitterScript._e.push(f);
                    });
                    return twitterScript;
                })(document, 'script', this.TWITTER_SCRIPT_ID, this.TWITTER_WIDGET_URL));
            };
        NgxTwitterTimelineService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        NgxTwitterTimelineService.ctorParameters = function () { return []; };
        /** @nocollapse */ NgxTwitterTimelineService.ngInjectableDef = i0.defineInjectable({ factory: function NgxTwitterTimelineService_Factory() { return new NgxTwitterTimelineService(); }, token: NgxTwitterTimelineService, providedIn: "root" });
        return NgxTwitterTimelineService;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxTwitterTimelineComponent = /** @class */ (function () {
        function NgxTwitterTimelineComponent(element, twitterTimelineService) {
            this.element = element;
            this.twitterTimelineService = twitterTimelineService;
            this.defaultOpts = {
                tweetLimit: 5
            };
            this.defaultData = {
                sourceType: 'url',
                url: 'https://twitter.com/twitterdev',
                screenName: 'twitterdev'
            };
        }
        /**
         * @return {?}
         */
        NgxTwitterTimelineComponent.prototype.ngOnChanges = /**
         * @return {?}
         */
            function () {
                if (this.data && this.data.sourceType) {
                    switch (this.data.sourceType) {
                        case 'url':
                            delete this.defaultData.screenName;
                            break;
                        case 'profile':
                            delete this.defaultData.url;
                            break;
                        default:
                            break;
                    }
                    this.loadTwitterWidget();
                }
            };
        /**
         * @return {?}
         */
        NgxTwitterTimelineComponent.prototype.loadTwitterWidget = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.twitterTimelineService
                    .loadScript()
                    .subscribe(( /**
             * @param {?} twttr
             * @return {?}
             */function (twttr) {
                    /** @type {?} */
                    var nativeElement = _this.element.nativeElement;
                    nativeElement.innerHTML = "";
                    window['twttr']
                        .widgets
                        .createTimeline(__assign({}, _this.defaultData, _this.data), nativeElement, __assign({}, _this.defaultOpts, _this.opts))
                        .then(( /**
                 * @param {?} embed
                 * @return {?}
                 */function (embed) {
                        // console.log(embed);
                    }))
                        .catch(( /**
                 * @param {?} error
                 * @return {?}
                 */function (error) { return console.error(error); }));
                }), ( /**
                 * @param {?} err
                 * @return {?}
                 */function (err) { return console.error(err); }));
            };
        NgxTwitterTimelineComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'ngx-twitter-timeline',
                        template: ""
                    }] }
        ];
        /** @nocollapse */
        NgxTwitterTimelineComponent.ctorParameters = function () {
            return [
                { type: i0.ElementRef },
                { type: NgxTwitterTimelineService }
            ];
        };
        NgxTwitterTimelineComponent.propDecorators = {
            data: [{ type: i0.Input }],
            opts: [{ type: i0.Input }]
        };
        return NgxTwitterTimelineComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxTwitterTimelineModule = /** @class */ (function () {
        function NgxTwitterTimelineModule() {
        }
        NgxTwitterTimelineModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [NgxTwitterTimelineComponent],
                        imports: [],
                        exports: [NgxTwitterTimelineComponent]
                    },] }
        ];
        return NgxTwitterTimelineModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NgxTwitterTimelineService = NgxTwitterTimelineService;
    exports.NgxTwitterTimelineComponent = NgxTwitterTimelineComponent;
    exports.NgxTwitterTimelineModule = NgxTwitterTimelineModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-twitter-timeline.umd.js.map